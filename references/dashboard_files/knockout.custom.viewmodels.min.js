/* Minified on 3/27/2024 */
var alkamiviewmodels=function(){var e={WizardStep:function(e){this.id=ko.observable(e.id),this.template=ko.observable(e.template),this.isGlobalTemplate=ko.observable(e.isGlobalTemplate),this.isFirst=ko.observable(0===e.id),this.isLast=ko.observable(e.isLast),this.nextCallback=e.nextCallback,this.backCallback=e.backCallback},WizardModal:function(t){var r=this;r.submitting=ko.observable(!1),r.steps=ko.observableArray([]),ko.utils.arrayForEach(t,(function(t){r.steps.push(new e.WizardStep(t))})),r.currentStep=ko.observable(r.steps()[0]),r.nextLabel=ko.computed((function(){return r.currentStep().isLast()?r.submitting()?"Saving...":"Save":"Next"})),r.backLabel=ko.computed((function(){return"Back"})),r.nextStep=ko.computed((function(){return r.currentStep().isLast()?r.currentStep():r.steps()[r.currentStep().id()+1]})),r.previousStep=ko.computed((function(){return r.currentStep().isFirst()?r.currentStep():r.steps()[r.currentStep().id()-1]})),r.canGoForward=ko.computed((function(){return!r.submitting()})),r.canGoBack=ko.computed((function(){return!r.submitting()})),r.moveForward=function(){r.canGoForward()&&r.nextStep()&&($.isFunction(r.nextStep().nextCallback)&&r.nextStep().nextCallback(),r.currentStep(r.nextStep()))},r.moveBack=function(){r.canGoBack()&&r.previousStep()&&($.isFunction(r.previousStep().backCallback)&&r.previousStep().backCallback(),r.currentStep(r.previousStep()))}},ErrorMessage:function(e){this.name=ko.observable(e.name),this.error=ko.observable(e.error)}};return e}();
//# sourceMappingURL=knockout.custom.viewmodels.min.js.map
